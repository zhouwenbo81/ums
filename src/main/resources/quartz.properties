# 对Quartz的配置文件
# 1 建表 docs/dbTables目录下有对应建表语句


# 固定前缀org.quartz
# 主要分为scheduler、threadPool、jobStore、plugin等部分

# 集群配置
org.quartz.scheduler.instanceName = DefaultQuartzScheduler
org.quartz.scheduler.rmi.export = false
org.quartz.scheduler.rmi.proxy = false
org.quartz.scheduler.wrapJobExecutionInUserTransaction = false

# 实例化ThreadPool时，使用的线程类为SimpleThreadPool
org.quartz.threadPool.class = org.quartz.simpl.SimpleThreadPool

# threadCount和threadPriority将以setter的形式注入ThreadPool实例
# 并发个数
org.quartz.threadPool.threadCount = 10
# 优先级
org.quartz.threadPool.threadPriority = 5
org.quartz.threadPool.threadsInheritContextClassLoaderOfInitializingThread = true

org.quartz.jobStore.misfireThreshold = 5000

# 默认存储在内存中
#org.quartz.jobStore.class = org.quartz.simpl.RAMJobStore

#持久化配置

# 2选定事务  --使用JobStoreTX来管理事务
org.quartz.jobStore.class = org.quartz.impl.jdbcjobstore.JobStoreTX
# 3选定JDBC代理类
org.quartz.jobStore.driverDelegateClass:org.quartz.impl.jdbcjobstore.StdJDBCDelegate
org.quartz.jobStore.useProperties:true
#
# 4数据库表前缀
org.quartz.jobStore.tablePrefix = QRTZ_
# 5指定数据源名称
org.quartz.jobStore.dataSource : qzDS
# 6定义ConnectionProvider的实现类
#org.quartz.dataSource.qzDS.connectionProvider.class:org.quartz.utils.PoolingConnectionProvider
# PoolingConnectionProvider没有提供无参构造函数，使用该类会出现
#   Caused by: java.lang.InstantiationException: org.quartz.utils.PoolingConnectionProvider 错误
org.quartz.dataSource.qzDS.connectionProvider.class:com.zwb.ums.other.MyPoolingconnectionProvider

# 7配置数据源属性
org.quartz.dataSource.qzDS.driver = com.mysql.jdbc.Driver

#org.quartz.dataSource.qzDS.URL = jdbc:mysql://190.0.1.88:3306/quartz_test?useUnicode=true&characterEncoding=UTF-8
org.quartz.dataSource.qzDS.url = jdbc:mysql://127.0.0.1:3306/quartz_test?useUnicode=true&amp;characterEncoding=utf8

org.quartz.dataSource.qzDS.user = root

org.quartz.dataSource.qzDS.password = root

org.quartz.dataSource.qzDS.maxConnections = 10


#